{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>This tool is intended to parse gcc graph production.  This include exploded graph, callgraph and supergraph. The tool parse it and produce output according to a yaml configuration.</p> <p>Usage :</p> <pre><code>uv run ./gcc_graph_tool.py -y yml/callgraph.yml [FILES]\n</code></pre>"},{"location":"environment/","title":"Python environment","text":"<p>TODO :  - use pydantic to get environment variables - use mkdocs and build http page accessible via github - write some test with pytest and run it through github action - use ruff as code formatter - use ty for type checking - use a pre-commit to run code formatter and type checking automatically - use python @dataclass - use fastAPI for modules API</p>"},{"location":"environment/#uv","title":"uv","text":"<p>Use uv for dependency management: Run the following command to install dependency.</p> <pre><code>uv sync\n</code></pre>"}]}